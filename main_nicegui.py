from nicegui import ui, events, app
from pathlib import Path
from main_restructured import run_analysis_pipeline
import asyncio
from concurrent.futures import ThreadPoolExecutor
import shutil
import os

# ----------------
# --- V√ÅLTOZ√ìK ---
# ----------------

# Felt√∂lt√∂tt vide√≥k k√∂nyvt√°ra
INPUT_DIR = Path("input_videos")
INPUT_DIR.mkdir(exist_ok=True)

# Elemzett vide√≥k k√∂nyvt√°ra
OUTPUT_DIR = Path("output_videos")
OUTPUT_DIR.mkdir(exist_ok=True)

# Kiv√°lasztott vide√≥ t√°rol√°sa
selected_video = None
# Kiv√°lasztott elemzett vide√≥ t√°rol√°sa
selected_analyzed_video = None
# Log ter√ºlet a visszajelz√©sekhez
ui_log_area = None

# Aszinkron futtat√°shoz sz√ºks√©ges executor
executor = ThreadPoolExecutor()

# ----------------
# --- FUNKCI√ìK ---
# ----------------

# Aszinkron f√ºggv√©ny a vide√≥elemz√©s futtat√°s√°ra h√°tt√©rben
async def run_in_thread(func):
    loop = asyncio.get_event_loop()
    return await loop.run_in_executor(executor, func)

# Aszinkron f√ºggv√©ny a vide√≥elemz√©s futtat√°s√°ra visszajelz√©ssel
async def run_pipeline_with_feedback(video_path: str, loader_dialog, container_to_hide):
    # T√∂lt≈ëk√©perny≈ë m√∂g√∂tti kont√©ner elrejt√©se
    container_to_hide.set_visibility(False)
    # Log ter√ºlet t√∂rl√©se az elemz√©s kezdetekor
    if ui_log_area:
        ui_log_area.value = ""
    # T√∂lt≈ëk√©perny≈ë megnyit√°sa
    loader_dialog.open()
    # Elemz√©s futtat√°sa a h√°tt√©rben
    await run_in_thread(lambda: run_analysis_pipeline(video_path))
    # T√∂lt≈ëk√©perny≈ë bez√°r√°sa
    loader_dialog.close()
    ui.notify("Elemz√©s befejez≈ëd√∂tt!")
    ui.navigate.to('/analyzed_videos')

# Log √ºzenetek megjelen√≠t√©se a GUI-ban
def gui_log(msg: str):
    global ui_log_area
    print(msg)  # konzolra tov√°bbra is megy
    if ui_log_area:
        def update():
            ui_log_area.value += f"{msg}\n"
            ui_log_area.run_method('scrollTop', ui_log_area.element.scrollHeight)
        ui.run_later(update)  # üëà GUI friss√≠t√©s f≈ë sz√°lon

def open_video_file(path):
    try:
        os.startfile(Path(path).resolve())
    except Exception as e:
        ui.notify(f"Hiba a vide√≥ megnyit√°sakor: {e}", color="red")

# Vide√≥ felt√∂lt√©se √©s ment√©se a megadott k√∂nyvt√°rba
def save_uploaded_video(e: events.UploadEventArguments):
    target_path = INPUT_DIR / e.name
    # Vide√≥ √°tm√°sol√°sa a megadott k√∂nyvt√°rba
    with open(target_path, 'wb') as f:
        f.write(e.content.read())
    ui.notify(f"Vide√≥ felt√∂ltve: {e.name}")

# Adott vide√≥f√°jl t√∂rl√©se gombnyom√°sra (felt√∂lt√∂tt vide√≥k)
def delete_video_file(file_path: Path):
    if file_path.exists():
        file_path.unlink()
        ui.notify(f"T√∂r√∂lve: {file_path.name}")
        # Oldal friss√≠t√©se a t√∂rl√©s ut√°n
        ui.navigate.to('/uploaded_videos')

# Adott elemzett vide√≥f√°jl r√©szleteinek megjelen√≠t√©se gombnyom√°sra
def show_analyzed_video_details(video_file: Path):
    global selected_analyzed_video
    selected_analyzed_video = video_file
    ui.navigate.to('/analyzed_video_detail')

# Adott elemzett vide√≥f√°jlhoz tartoz√≥ mappa t√∂rl√©se gombnyom√°sra
def delete_analyzed_video_file(video_path: Path):
    try:
        # Az elemzett vide√≥ mapp√°j√°nak t√∂rl√©se
        folder_path = video_path.parent
        shutil.rmtree(folder_path)
        ui.notify(f"T√∂r√∂lve: {folder_path.name}")
        ui.navigate.to('/analyzed_videos')
    except Exception as e:
        ui.notify(f"A f√°jlt nem lehet t√∂r√∂lni, mert m√©g haszn√°latban van!", color='orange')

# Vide√≥ kiv√°laszt√°sa
def select_video_for_analysis(video_file: Path):
    global selected_video
    selected_video = video_file
    ui.notify(f"Kiv√°lasztott vide√≥: {video_file.name}")
    ui.navigate.to('/analysis_config')

# ---------------
# --- OLDALAK ---
# ---------------

# --- Kezd≈ëlap ("/") ---
@ui.page("/")
def start_page():
    with ui.column().classes("absolute-center items-center gap-12"):
        # Kezd≈ëlap c√≠me
        ui.label("Futballanal√≠zis Alkalmaz√°s").classes("text-3xl font-bold")
        # Ind√≠t√°s gomb -> teszt oldalra navig√°l
        ui.button("Ind√≠t√°s", on_click=lambda: ui.navigate.to("/main_page")).classes("w-48 text-lg")
        # Kil√©p√©s gomb -> alkalmaz√°s le√°ll√≠t√°sa
        ui.button("Kil√©p√©s", on_click=app.shutdown).classes("w-48 text-lg")

# --- Felt√∂lt√∂tt vide√≥k oldala ("/uploaded_videos") ---
@ui.page("/uploaded_videos")
def uploaded_videos_page():
    with ui.column().classes("absolute-center items-center gap-4"):
        # Felt√∂lt√∂tt vide√≥k oldal√°nak c√≠me
        ui.label("Felt√∂lt√∂tt vide√≥k").classes("text-2xl font-semibold")
        # Felt√∂lt√∂tt vide√≥k mapp√°j√°nak ellen≈ërz√©se
        video_files = list(INPUT_DIR.glob("*.mp4")) + list(INPUT_DIR.glob("*.avi")) + list(INPUT_DIR.glob("*.mkv"))
        if not video_files:
            ui.label("A Felt√∂lt√∂tt vide√≥k mapp√°ja √ºres!").classes("text-white")
        else:
            with ui.row().classes("justify-center items-start flex-wrap gap-8"):
                for video_file in video_files:
                    with ui.column().classes("items-center"):
                        # Thumbnail + vide√≥lej√°tsz√≥
                        ui.video(f'/videos/{video_file.name}').props('controls').classes("w-64 h-36 rounded shadow")
                        # Vide√≥k c√≠mei
                        ui.label(video_file.name).classes("text-sm text-center text-white mt-2")
                        # Vide√≥ t√∂rl√©se gomb
                        ui.button(on_click=lambda f=video_file: delete_video_file(f))\
                            .props('color="red" icon="delete"')
        # Visszal√©p√©s a men√ºbe
        ui.button("Vissza a men√ºbe", on_click=lambda: ui.navigate.to("/main_page")).classes("mt-4")

# --- Elemzett vide√≥k oldala ("/analyzed_videos") ---
@ui.page("/analyzed_videos")
def analyzed_videos_page():
    with ui.column().classes("absolute-center items-center gap-4"):
        ui.label("Elemzett vide√≥k").classes("text-2xl font-semibold")
        video_dirs = [p for p in OUTPUT_DIR.iterdir() if p.is_dir() and p.name.startswith("annotated_")]

        if not video_dirs:
            ui.label("Az elemzett vide√≥k mapp√°ja √ºres!").classes("text-white")
        else:
            with ui.row().classes("justify-center flex-wrap gap-8"):
                for video_dir in video_dirs:
                    video_name = video_dir.name.replace("annotated_", "")
                    video_path = video_dir / f"annotated_{video_name}.mp4"
                    with ui.column().classes("items-center cursor-pointer").on("click", lambda f=video_path: show_analyzed_video_details(f)):
                        ui.icon("folder").classes("text-yellow-400 text-6xl")
                        ui.label(video_name + ".mp4").classes("text-sm text-center text-white mt-2 max-w-48 truncate")

        ui.button("Vissza", on_click=lambda: ui.navigate.to("/main_page")).classes("mt-4")

@ui.page("/analyzed_video_detail")
def analyzed_video_detail_page():
 
    with ui.column().classes("absolute-center items-center gap-4"):
        # Statikus el≈ën√©zet
        ui.label("Elemzett vide√≥ r√©szletei").classes("text-2xl font-semibold")

        # Elemzett vide√≥ thumbnailj√©nek megjelen√≠t√©se
        thumbnail_path = f"/analyzed_videos/{selected_analyzed_video.parent.name}/thumbnail/thumbnail.jpg"
        ui.image(thumbnail_path).classes("w-96 h-56 rounded shadow object-cover")

        # Elemzett vide√≥ neve
        ui.label(selected_analyzed_video.name).classes("text-white text-center")

        # Gombok
        with ui.column().classes("gap-2 w-64"):
            ui.button("Vide√≥ megnyit√°sa", on_click=lambda: open_video_file(selected_analyzed_video)).classes("w-full")
            # ui.button("Statisztik√°k").classes("w-full")
            # ui.button("H≈ët√©rk√©p").classes("w-full")
            # ui.button("Grafikonok").classes("w-full")
            ui.button("T√∂rl√©s", on_click=lambda: delete_analyzed_video_file(selected_analyzed_video)).props('color="red" icon="delete"').classes("w-full")

        ui.button("Vissza az elemzett vide√≥khoz", on_click=lambda: ui.navigate.to("/analyzed_videos")).classes("mt-6")

# --- Vide√≥ kiv√°laszt√°sa elemz√©shez ("/select_video_for_analysis") ---
@ui.page("/select_video_for_analysis")
def select_video_for_analysis_page():
    with ui.column().classes("absolute-center items-center gap-4"):
        # Vide√≥ kiv√°laszt√°sa oldal c√≠me
        ui.label("Vide√≥ kiv√°laszt√°sa elemz√©shez").classes("text-2xl font-semibold")
        ui.markdown("Kattintson a vide√≥ra a kiv√°laszt√°shoz!").classes("text-center")
        
        # Felt√∂lt√∂tt vide√≥k mapp√°j√°nak ellen≈ërz√©se
        video_files = list(INPUT_DIR.glob("*.mp4")) + list(INPUT_DIR.glob("*.avi")) + list(INPUT_DIR.glob("*.mkv"))
        if not video_files:
            ui.label("Nincs felt√∂lt√∂tt vide√≥! El≈ësz√∂r t√∂lts√∂n fel vide√≥kat.").classes("text-orange-400 text-center")
            # Vide√≥ felt√∂lt√©se gomb
            ui.button("Vide√≥ felt√∂lt√©se", on_click=lambda: ui.navigate.to("/main_page")).classes("mt-4")
        else:
            with ui.row().classes("justify-center items-start flex-wrap gap-8 max-w-4xl"):
                for video_file in video_files:
                    with ui.column().classes("items-center cursor-pointer"):
                        # Kattinthat√≥ vide√≥ container
                        with ui.card().classes("p-4 hover:bg-gray-700 transition-colors duration-200") \
                            .on('click', lambda f=video_file: select_video_for_analysis(f)):
                            # Vide√≥ thumbnail (els≈ë frame el≈ën√©zet) - letiltott vez√©rl≈ëkkel
                            ui.video(f'/videos/{video_file.name}').classes("w-64 h-36 rounded shadow") \
                                .props('muted preload="metadata" style="pointer-events: none;"')
                            # Vide√≥k c√≠mei
                            ui.label(video_file.name).classes("text-sm text-center text-white mt-2 max-w-64 truncate")
        
        # Visszal√©p√©s az elemz√©s konfigur√°ci√≥s oldalra
        ui.button("Vissza", on_click=lambda: ui.navigate.to("/analysis_config")).classes("mt-4")

# --- Elemz√©s konfigur√°ci√≥s oldal ("/analysis_config") ---
@ui.page("/analysis_config")
def analysis_config_page():
    global ui_log_area
    
    page_container = ui.column().classes("absolute-center items-center gap-4")

    with page_container:
        # Elemz√©s konfigur√°ci√≥s oldal c√≠me
        ui.label("Vide√≥ elemz√©se").classes("text-2xl font-semibold")
        
        # Kiv√°lasztott vide√≥ megjelen√≠t√©se
        if selected_video:
            ui.markdown(f"**Kiv√°lasztott vide√≥:** {selected_video.name}").classes("text-center text-green-400")
        else:
            ui.markdown("M√©g nincs vide√≥ kiv√°lasztva az elemz√©shez.").classes("text-center text-orange-400")
        
        # Vide√≥ kiv√°laszt√°sa gomb
        ui.button("Vide√≥ kiv√°laszt√°sa", 
                 on_click=lambda: ui.navigate.to("/select_video_for_analysis")).classes("w-48 text-lg")
        
        # T√∂lt≈ëk√©perny≈ë dial√≥gus l√©trehoz√°sa
        loader_dialog = ui.dialog().classes("bg-transparent")
        with loader_dialog:
            with ui.column().classes("items-center gap-4"):
                ui.spinner(size="lg", color="primary")
                ui.label("Elemz√©s folyamatban...").classes("text-white text-lg text-center")
                
                # Folyamatnapl√≥ ter√ºlet a t√∂lt≈ëk√©perny≈ën
                ui_log_area = ui.textarea(label="Folyamatnapl√≥") \
                    .classes("w-96 h-48 bg-black text-white text-xs p-2") \
                    .props("filled readonly dense")
        
        # Elemz√©s ind√≠t√°sa gomb (csak ha van kiv√°lasztott vide√≥)
        if selected_video:
            ui.button("Elemz√©s ind√≠t√°sa", 
                     on_click=lambda: run_pipeline_with_feedback(str(selected_video), loader_dialog, page_container)
                     ).classes("w-48 text-lg mt-2")
            
        # Vissza a men√ºbe gomb -> visszal√©p√©s a f≈ëoldalra
        ui.button("Vissza", on_click=lambda: ui.navigate.to("/main_page")).classes("mt-4")

# --- Elemezni k√≠v√°nt vide√≥ kiv√°laszt√°sa oldal ---
@ui.page("/select_video")
def select_video_page():
    with ui.column().classes("absolute-center items-center gap-4"):
        # Vide√≥ kiv√°laszt√°sa oldal c√≠me
        ui.label("Vide√≥ kiv√°laszt√°sa").classes("text-2xl font-semibold")
        # Vide√≥ kiv√°laszt√°sa gomb --> vide√≥ kiv√°laszt√°sa oldalra navig√°l
        ui.button("Vide√≥ kiv√°laszt√°sa", on_click=lambda: ui.navigate.to("/analysis_config")).classes("w-48 text-lg")
        # Vissza az elemz√©s konfigur√°ci√≥s oldalra --> elemz√©s konfigur√°ci√≥s oldalra navig√°l
        ui.button("Vissza", on_click=lambda: ui.navigate.to("/main_page")).classes("mt-4")

# --- Teszt oldal ("/teszt") ---
@ui.page("/main_page")
def main_page():
    with ui.column().classes("absolute-center items-center"):
        # Teszt oldal c√≠me
        ui.label("Vide√≥ elemz√©se").classes("text-2xl font-semibold")
        # Vide√≥ felt√∂lt√©se
        ui.upload(on_upload=save_uploaded_video,
                  multiple=True, 
                  on_rejected=lambda e: ui.notify("Csak mp4/avi kiterjeszt√©s≈± vide√≥k enged√©lyezettek!")
                  ).props('accept=".mp4,.avi,.mkv" auto-upload')  
        # Vide√≥ felt√∂lt√©s√©nek le√≠r√°sa
        ui.markdown("Itt t√∂ltheti fel az elemezni k√≠v√°nt vide√≥t (mp4/avi/mkv).").classes("text-center")
        # Felt√∂lt√∂tt vide√≥k -> felt√∂lt√∂tt vide√≥k oldal√°ra navig√°l
        ui.button("Felt√∂lt√∂tt vide√≥k", on_click=lambda: ui.navigate.to("/uploaded_videos")).classes("mt-4")
        # Elemz√©s konfigur√°ci√≥s oldal -> elemz√©s konfigur√°ci√≥s oldalra navig√°l
        ui.button("Vide√≥elemz√©s", on_click=lambda: ui.navigate.to("/analysis_config")).classes("mt-4")
        # Elemzett vide√≥k -> elemzett vide√≥k oldal√°ra navig√°l
        ui.button("Elemzett vide√≥k", on_click=lambda: ui.navigate.to("/analyzed_videos")).classes("mt-4")
        # Vissza a kezd≈ëlapra gomb -> kezd≈ëlapra navig√°l
        ui.button("Vissza a kezd≈ëlapra", on_click=lambda: ui.navigate.to("/")).classes("mt-4")

# --- GUI ind√≠t√°sa nat√≠v m√≥dban, teljes k√©perny≈ën ---
app.add_static_files('/videos', INPUT_DIR)
app.add_static_files('/analyzed_videos', OUTPUT_DIR)
ui.run(native=True, fullscreen=True, title="Futballanal√≠zis", dark=True)